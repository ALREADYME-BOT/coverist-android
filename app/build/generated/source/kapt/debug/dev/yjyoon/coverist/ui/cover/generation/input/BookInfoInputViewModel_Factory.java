// Generated by Dagger (https://dagger.dev).
package dev.yjyoon.coverist.ui.cover.generation.input;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import dev.yjyoon.coverist.repository.CoverRepository;
import dev.yjyoon.coverist.repository.GenreRepository;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookInfoInputViewModel_Factory implements Factory<BookInfoInputViewModel> {
  private final Provider<GenreRepository> genreRepositoryProvider;

  private final Provider<CoverRepository> coverRepositoryProvider;

  public BookInfoInputViewModel_Factory(Provider<GenreRepository> genreRepositoryProvider,
      Provider<CoverRepository> coverRepositoryProvider) {
    this.genreRepositoryProvider = genreRepositoryProvider;
    this.coverRepositoryProvider = coverRepositoryProvider;
  }

  @Override
  public BookInfoInputViewModel get() {
    return newInstance(genreRepositoryProvider.get(), coverRepositoryProvider.get());
  }

  public static BookInfoInputViewModel_Factory create(
      Provider<GenreRepository> genreRepositoryProvider,
      Provider<CoverRepository> coverRepositoryProvider) {
    return new BookInfoInputViewModel_Factory(genreRepositoryProvider, coverRepositoryProvider);
  }

  public static BookInfoInputViewModel newInstance(GenreRepository genreRepository,
      CoverRepository coverRepository) {
    return new BookInfoInputViewModel(genreRepository, coverRepository);
  }
}
